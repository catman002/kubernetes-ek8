#!/bin/bash

##<=4.18:nf_conntrack_ipv4;>=4.18以上用 nf_conntrack
conntrack_str=nf_conntrack

#common
ca_file=${kubernetes_etc_pki_dir}/${ca_CN}.pem
root_ca_file=${ca_file}

#docker
docker_exec_start=${bin_dir}/dockerd
docker_work_dir=/var/lib/docker

#containerd && config.tom
containerd_exec_start=${bin_dir}/containerd
docker_io_replace=https://ustc-edu-cn.mirror.aliyuncs.com
k8s_gcr_io_replace=registry.aliyuncs.com/google_containers

#etcd
etcd_cert_file=${etcd_pki_dir}/${etcd_CN}.pem
etcd_key_file=${etcd_pki_dir}/${etcd_CN}-key.pem
etcd_trusted_ca_file=${etcd_pki_dir}/${etcd_ca_CN}.pem
etcd_peer_cert_file=${etcd_pki_dir}/${etcd_peer_CN}.pem
etcd_peer_key_file=${etcd_pki_dir}/${etcd_peer_CN}-key.pem
etcd_peer_trusted_ca_file=${etcd_pki_dir}/${etcd_peer_CN}.pem

#front-proxy
requestheader_client_ca_file=${kubernetes_etc_pki_dir}/${front_proxy_ca_CN}.pem
proxy_client_cert_file=${kubernetes_etc_pki_dir}/${front_proxy_ca_CN}.pem
proxy_client_key_file=${kubernetes_etc_pki_dir}/${front_proxy_ca_CN}-key.pem

#apiserver servers
cluster_name=kubernetes
apiserver_work_dir=/var/lib/kube-apiserver
apiserver_exec_start=${bin_dir}/kube-apiserver
tls_cert_file=${kubernetes_etc_pki_dir}/${apiserver_CN}.pem
tls_private_key_file=${kubernetes_etc_pki_dir}/${apiserver_CN}-key.pem
apiserver_secure_port=6443
service_node_port_range=1-65535
token_auth_file=${kubernetes_etc_pki_dir}/token.csv
client_ca_file=${ca_file}
apiserver_client_certificate=${kubernetes_etc_pki_dir}/${apiserver_kubelet_client_CN}.pem
apiserver_client_key=${kubernetes_etc_pki_dir}/${apiserver_kubelet_client_CN}-key.pem
service_account_key_file=${kubernetes_etc_pki_dir}/sa.pub
service_account_signing_key_file=${kubernetes_etc_pki_dir}/sa.key
etcd_cafile=${etcd_pki_dir}/${etcd_ca_CN}.pem
etcd_certfile=${kubernetes_etc_pki_dir}/${apiserver_etcd_client_CN}.pem
etcd_keyfile=${kubernetes_etc_pki_dir}/${apiserver_etcd_client_CN}-key.pem
service_account_issuer=http://${cluster_name}.default.svc.cluster.local
#api_audiences=${cluster_name}.default.svc
#service_account_issuer=api
api_audiences=api

#kubectl
kubectl_certificate_authority=${ca_file}
kubectl_client_certificate=${kubernetes_etc_pki_dir}/${admin_CN}.pem
kubectl_client_key=${kubernetes_etc_pki_dir}/${admin_CN}-key.pem

#controller servers
controller_work_dir=/var/lib/kube-controller-manager
controller_exec_start=${bin_dir}/kube-controller-manager
controller_secure_port=10257
controller_port=10252
cluster_siging_cert_file=${kubernetes_etc_pki_dir}/${ca_CN}.pem
cluster_siging_key_file=${kubernetes_etc_pki_dir}/${ca_CN}-key.pem
service_account_private_key_file=${kubernetes_etc_pki_dir}/sa.key
controller_certificate_authority=${kubernetes_etc_pki_dir}/${ca_CN}.pem
controller_client_certificate=${kubernetes_etc_pki_dir}/${controller_CN}.pem
controller_client_key=${kubernetes_etc_pki_dir}/${controller_CN}-key.pem
controller_tls_cert_file=${kubernetes_etc_pki_dir}/${controller_CN}.pem
controller_tls_private_key_file=${kubernetes_etc_pki_dir}/${controller_CN}-key.pem


#scheduler
scheduler_work_dir=/var/lib/kube-scheduler
scheduler_exec_start=${bin_dir}/kube-scheduler
scheduler_certificate_authority=${ca_file}
scheduler_client_certificate=${kubernetes_etc_pki_dir}/${scheduler_CN}.pem
scheduler_client_key=${kubernetes_etc_pki_dir}/${scheduler_CN}-key.pem

#haproxy
haproxy_exec_start=${bin_dir}/haproxy
haproxy_dir=/etc/haproxy

#keepalived
keepalived_dir=/etc/keepalived
keepalived_exec_start=${bin_dir}/keepalived
priority=255
weight=-100

#kubelet
kubelet_pause_domain=registry.aliyuncs.com\/google_containers
kubelet_work_dir=/var/lib/kubelet
kubelet_dir=${kubernetes_etc_dir}/kubelet
pod_infra_container_image=registry.aliyuncs.com/google_containers/pause:${pause_version}
kubelet_exec_start=${bin_dir}/kubelet
kubelet_client_ca_file=${ca_file}
kubelet_certificate_authority=${ca_file}
kubelet_client_certificate=${kubernetes_etc_pki_dir}/kubelet.crt
kubelet_client_key=${kubernetes_etc_pki_dir}/kubelet.key
kubelet_static_pod_path=${kubernetes_etc_dir}/manifests

#kubeproxy
kubeproxy_dir=${kubernetes_etc_dir}/kubeproxy
kubeproxy_work_dir=/var/lib/kube-proxy
kubeproxy_exec_start=${bin_dir}/kube-proxy
kubeproxy_certificate_authority=${ca_file}
kubeproxy_client_certificate=${kubernetes_etc_pki_dir}/${kubeproxy_CN}.pem
kubeproxy_client_key=${kubernetes_etc_pki_dir}/${kubeproxy_CN}-key.pem

#calico
calico_dir=/etc/calico

#coredns
coredns_dir=/etc/coredns
cluster_dns_svc_ip=${coredns_cluster_ip}
cluster_dns_domain=cluster.local



